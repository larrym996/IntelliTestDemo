The 1st rule of Pex is it tries to increase code coverage. 
Because all statements have been covered, Pex will stop. 

exceptions that inherit from ArgumentException are expected.

PexChoose
any value from a  PexChoose.ValueFrom<T>(string description, T[] a) 
any integer value within a (min; max) PexChoose.ValueFromRange(string description, int min, int max) 
any index for a  PexChoose.IndexValue<T>(string description, T[] a)  
 
Documentation
https://msdn.microsoft.com/en-us/library/dn823749.aspx#NoRun
http://research.microsoft.com/en-us/projects/pex/pexconcepts.pdf
http://research.microsoft.com/en-us/projects/pex/pexmanual.pdf
http://research.microsoft.com/en-us/projects/pex/patterns.pdf

Technet Virtual Labs
https://technet.microsoft.com/en-us/virtuallabs

Jonathan de Halleux, Nikolai Tillmann, 
http://www.codeproject.com/Articles/31141/Getting-started-with-automated-white-box-testing-a

http://pex4fun.com
https://www.codehunt.com/
http://api.codehunt.com/

Videos
http://video.ch9.ms/ch9/f397/f75eb0f0-9766-471c-8976-b210d75df397/VSToolboxIntellitest_high.mp4
http://tv.ssw.com/6470/new-unit-testing-features-in-visual-studio-2015
https://channel9.msdn.com/blogs/briankel/pex-automated-exploratory-testing-for-net

=================
Notes:

Exceptions that inherit from ArgumentException are expected.

PexAssume.IsNotNull(lookupGamePlayers); 
PexAssume.IsTrue(lookupGamePlayers.Length == 2); 
PexAssume.IsNotNull(lookupGamePlayers[0]); 
PexAssume.IsNotNull(lookupGamePlayers[1]);  
PexAssume.IsNotNull(getPlayerStatistics); 
PexAssume.IsTrue(getPlayerStatistics.Length == 1); 
PexAssume.IsNotNull(getPlayerStatistics[0]); 
PexAssume.IsTrue(lookupGamePlayers[0].PlayerName == getPlayerStatistics[0].PlayerName); 



// arrange 
foreach (var lookupGamePlayer in lookupGamePlayers) 
{ 
target.QueryDataStore.Insert<LookupGamePlayersDto>(lookupGamePlay er); 
} 
target.QueryDataStore.Insert<GetPlayerStatisticsDto>(getPlayerStatistic s[0]);  

// assert 
var playerStats = target.QueryDataStore.GetData<GetPlayerStatisticsDto>().Single(); 
PexObserve.ValueAtEndOfTest("playerStats", playerStats); 
